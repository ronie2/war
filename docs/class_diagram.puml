@startuml

object get_transaction
object transaction._buy_plane
object transaction._buy_gun

object buyer.get_hangar
object buyer.get_buyer
object buyer.get_account

object validator._player_msg
object validator._equipment_msg
object validator._buy_plane
object validator._buy_gun
object validator.get_validator

class Shop {
+ db
{abstract} + buy_plane()
{abstract} + buy_gun()
}
class WarPlanesShop {
+ buy_plane()
+ buy_gun()
- _product_spec_by_id()
- _product_price_by_id()
# __compatible_guns()
}
class Buyer {
+ id
+ account
+ hangar
}
class Account {
+ account
+ decrease()
+ has_enought_resource()
+ as_dict()
}
class Validator {
- _validation_strategy
- args
- kwargs
+ validate()
}
class Hangar {
+ planes
+ add_plane()
+ has_plane()
+ current_weapon()
+ set_weapon()
+ as_dict()
}
class Transaction {
- _transaction_strategy
+ transaction
+ commit()
}

Shop <|-- WarPlanesShop
Account <.. buyer.get_account
Hangar <.. buyer.get_hangar
Transaction <.. get_transaction
Validator <.. validator.get_validator
Buyer <.. buyer.get_buyer
Buyer ..> buyer.get_account
Buyer ..> buyer.get_hangar
Buyer o--> Account
Buyer o--> Hangar
WarPlanesShop ..> buyer.get_buyer
WarPlanesShop ..> get_transaction
WarPlanesShop ..> validator.get_validator
WarPlanesShop o--> Buyer
WarPlanesShop o--> Transaction
WarPlanesShop o--> Validator
transaction._buy_plane <--o Transaction
transaction._buy_gun <--o Transaction

validator._player_msg <--o Validator
validator._equipment_msg <--o Validator
validator._buy_plane <--o Validator
validator._buy_gun <--o Validator


@enduml